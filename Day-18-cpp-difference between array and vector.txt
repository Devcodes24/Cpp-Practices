
1. Size and Dynamic Allocation:
   Array: The size of an array is fixed at the time of declaration, and it cannot be changed during runtime. Arrays in C++ are static and have a fixed size.
   Vector:Vectors, on the other hand, are part of the C++ Standard Template Library (STL) and are dynamic arrays. Vectors can dynamically resize themselves during runtime.

2. Memory Management:
   Array: Memory for arrays is allocated on the stack or in the data segment of the program. The size of the array must be known at compile time.
   Vector: Vectors allocate memory on the heap and manage it dynamically. This allows vectors to change in size during runtime.

3. Accessing Elements:
Array: Array elements can be accessed using indices. The index starts from 0.
Vector:Vector elements can also be accessed using indices, similar to arrays.

4. Functions and Methods:
   Array: Arrays in C++ do not have built-in member functions. Operations on arrays are typically done using loops.
 Vector: Vectors come with a variety of member functions provided by the C++ Standard Template Library, making operations and manipulations more convenient.
